"""Удалены инвестиционные таблицы

Revision ID: 146c2ad1d672
Revises: 5f3c67611350
Create Date: 2025-05-09 15:25:52.481735

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '146c2ad1d672'
down_revision: Union[str, None] = '5f3c67611350'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('детали_инвестиций')
    op.drop_table('типы_инвестиций')
    op.drop_table('доходность_инвестиций')
    op.drop_table('инвестиции')
    op.alter_column('счет', 'баланс',
               existing_type=postgresql.BYTEA(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('счет', 'баланс',
               existing_type=postgresql.BYTEA(),
               nullable=True)
    op.create_table('инвестиции',
    sa.Column('id_портфеля', sa.INTEGER(), server_default=sa.text('nextval(\'"инвестиции_id_портфеля_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('id_клиента', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('дата_создания', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('статус', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('баланс', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id_клиента'], ['клиент.id_клиента'], name='инвестиции_id_клиента_fkey'),
    sa.PrimaryKeyConstraint('id_портфеля', name='инвестиции_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('доходность_инвестиций',
    sa.Column('id_доходности', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('id_портфеля', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('доходность', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('дата_обновления', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id_портфеля'], ['инвестиции.id_портфеля'], name='доходность_инвестиц_id_портфеля_fkey'),
    sa.PrimaryKeyConstraint('id_доходности', name='доходность_инвестиций_pkey')
    )
    op.create_table('типы_инвестиций',
    sa.Column('id_типа_инвестиций', sa.INTEGER(), server_default=sa.text('nextval(\'"типы_инвестиций_id_типа_инвестиц_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('название_типа', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id_типа_инвестиций', name='типы_инвестиций_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('детали_инвестиций',
    sa.Column('id_детали', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('id_портфеля', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('id_типа_инвестиций', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('сумма', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('дата_покупки', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id_портфеля'], ['инвестиции.id_портфеля'], name='детали_инвестиций_id_портфеля_fkey'),
    sa.ForeignKeyConstraint(['id_типа_инвестиций'], ['типы_инвестиций.id_типа_инвестиций'], name='детали_инвестиц_id_типа_инвестиц_fkey'),
    sa.PrimaryKeyConstraint('id_детали', name='детали_инвестиций_pkey')
    )
    # ### end Alembic commands ###
